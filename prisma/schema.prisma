generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model firmy {
  id    Int    @id(map: "firmy_pk")
  nazwa String @db.Char(100)
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
model kategorie_wydatkow {
  id    Int     @db.SmallInt
  nazwa String? @db.Char(50)

  @@ignore
}

model mieszkania {
  numer                Int     @id(map: "mieszkania_pk") @db.SmallInt
  metraz               Decimal @db.Decimal(4, 2)
  platnoscprzelewem    Boolean
  zadeklarowanych_osob Int?    @default(0) @db.SmallInt
}

model naliczenia {
  numer_mieszkania Int      @db.SmallInt
  data             DateTime @db.Date
  opis             String   @db.Char(100)
  opal             Decimal  @db.Decimal(6, 2)
  fundusz          Decimal  @db.Decimal(6, 2)
  woda             Decimal  @db.Decimal(6, 2)
  id               Int      @id @default(autoincrement())
  smieci           Decimal? @default(0) @db.Decimal(6, 2)
}

model odczyty_wodomierzy {
  numer_mieszkania Int      @db.SmallInt
  data             DateTime @db.Date
  stan             Decimal  @db.Decimal(7, 3)
  typ              Int      @db.SmallInt
  id               Int      @id @default(autoincrement())

  @@unique([numer_mieszkania, data], map: "unikalnosc")
}

model operacje {
  id_firmy                         Int
  data                             DateTime @db.Date
  rodzaj_i_numer_dowodu_ksiegowego String   @db.Char(50)
  opis                             String   @db.Char(50)
  kwota                            Decimal  @db.Decimal(9, 2)
  czy_bank                         Boolean
  id_subkonta                      Int      @db.SmallInt
  id                               Int      @id @default(autoincrement())
  ilosc                            Decimal? @default(0) @db.Decimal(4, 2)
  id_kategorii                     Int?     @db.SmallInt
}

model stawki {
  data         DateTime @db.Date
  kwota_brutto Decimal  @db.Decimal(6, 2)
  typ          Int      @db.SmallInt
  id           Int      @id @default(autoincrement())
}

model subkonta {
  id    Int    @id(map: "subkonta_pk") @db.SmallInt
  nazwa String @db.Char(50)
}

model typy_dowodow_ksiegowych {
  id      Int     @id(map: "typy_dowod√≥w_ksiegowych_pk") @db.SmallInt
  opis    String  @db.VarChar(50)
  dowplat Boolean
}

model typy_odczytow {
  id   Int    @id(map: "typy_odczytow_pk") @db.SmallInt
  opis String @db.Char(15)
}

model typy_stawek {
  id   Int    @id(map: "typy_stawek_pk") @db.SmallInt
  opis String @db.Char(50)
}

model uzytkownicy {
  username String @db.VarChar(64)
  password String @db.VarChar(64)
  id       Int    @id @default(autoincrement())
}
