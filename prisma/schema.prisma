generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model firmy {
  id       Int        @id @default(autoincrement()) @db.SmallInt
  nazwa    String     @unique
  operacje operacje[]
  opisy    opisy[]    @relation("firmyToopisy")
}

model mieszkania {
  numer                Int                  @id @unique @db.SmallInt
  metraz               Decimal              @db.Decimal(4, 2)
  platnoscprzelewem    Boolean
  zadeklarowanych_osob Int                  @default(1) @db.SmallInt
  naliczenia           naliczenia[]
  odczyty              odczyty_wodomierzy[]
}

model naliczenia {
  numer_mieszkania Int        @db.SmallInt
  data             DateTime   @db.Date
  opis             String
  opal             Decimal    @db.Money
  fundusz          Decimal    @db.Money
  woda             Decimal    @db.Money
  id               Int        @id @default(autoincrement())
  smieci           Decimal    @default(0) @db.Money
  mieszkanie       mieszkania @relation(fields: [numer_mieszkania], references: [numer])

  @@unique([numer_mieszkania, data, opis])
}

model odczyty_wodomierzy {
  numer_mieszkania Int           @db.SmallInt
  data             DateTime      @db.Date
  stan             Decimal       @db.Decimal(7, 3)
  typ              Int           @db.SmallInt
  id               Int           @id @default(autoincrement())
  mieszkanie       mieszkania    @relation(fields: [numer_mieszkania], references: [numer])
  typy_odczytow    typy_odczytow @relation(fields: [typ], references: [id])

  @@unique([numer_mieszkania, data])
}

model operacje {
  id_firmy                         Int      @db.SmallInt
  data                             DateTime @db.Date
  rodzaj_i_numer_dowodu_ksiegowego String
  opis                             String?
  kwota                            Decimal  @db.Money
  czy_bank                         Boolean
  id_subkonta                      Int
  id                               Int      @id @default(autoincrement())
  ilosc                            Decimal? @default(0) @db.Decimal(6, 2)
  komentarz                        String?
  id_opisu                         Int?     @db.SmallInt
  firma                            firmy    @relation(fields: [id_firmy], references: [id])
  opis_pow                         opisy?   @relation(fields: [id_opisu], references: [id])
  subkonta                         subkonta @relation(fields: [id_subkonta], references: [id])
  is_deleted                       Boolean  @default(false)

  @@unique([id_firmy, data, rodzaj_i_numer_dowodu_ksiegowego, kwota])
}

model stawki {
  data         DateTime    @db.Date
  kwota_brutto Decimal     @db.Money
  id           Int         @id @default(autoincrement())
  id_typu      Int         @db.SmallInt
  typy_stawek  typy_stawek @relation(fields: [id_typu], references: [id])

  @@unique([data, kwota_brutto, id_typu])
}

model subkonta {
  id                 Int                  @id
  nazwa              String               @unique
  kategorie_wydatkow kategorie_wydatkow[]
  operacje           operacje[]
}

model typy_dowodow_ksiegowych {
  id      Int     @id @db.SmallInt
  opis    String  @unique
  dowplat Boolean
  opisy   opisy[] @relation("opisyTotypy_dowodow_ksiegowych")
}

model typy_odczytow {
  id      Int                  @id @db.SmallInt
  opis    String               @unique
  odczyty odczyty_wodomierzy[]
}

model typy_stawek {
  id     Int      @id @db.SmallInt
  opis   String   @unique
  stawki stawki[]
}

model opisy {
  id                      Int                       @id @default(autoincrement())
  opis                    String                    @unique
  ilosc_wymagana          Boolean                   @default(false)
  id_kategorii_wydatku    Int
  jednostka_miary         String?
  operacje                operacje[]
  kategoria_wydatku       kategorie_wydatkow        @relation(fields: [id_kategorii_wydatku], references: [id])
  firmy                   firmy[]                   @relation("firmyToopisy")
  typy_dowodow_ksiegowych typy_dowodow_ksiegowych[] @relation("opisyTotypy_dowodow_ksiegowych")
}

model kategorie_wydatkow {
  id          Int      @id @default(autoincrement())
  nazwa       String   @unique
  id_subkonta Int
  czy_wydatek Boolean  @default(true)
  subkonta    subkonta @relation(fields: [id_subkonta], references: [id])
  opisy       opisy[]
}

view kartoteki {
  id                               Int      @id
  numer_mieszkania                 Int      @db.SmallInt
  data                             DateTime @db.Date
  opis                             String?
  rodzaj_i_numer_dowodu_ksiegowego String?
  naleznosc                        Decimal  @db.Money
  wplata                           Decimal  @db.Money
  saldo                            Decimal  @db.Money
}

view salda {
  numer_mieszkania Int       @id @db.SmallInt
  data             DateTime? @db.Date
  saldo            Decimal   @db.Money
}

view numeryKP {
  nr Int @id
}
